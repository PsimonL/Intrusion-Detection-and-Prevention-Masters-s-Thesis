#!/bin/bash

declare -A attacks=(
    [sql_inj]="WebApp/sql_inj.sh"
    [xss]="WebApp/xss.sh"
    [ssh_force]="System/ssh_force.sh"
    [port_scan]="System/port_scan.sh"
    [dos]="System/dos.sh"
    [tcp_syn_flood]="System/tcp_syn_flood.sh"
)

declare -A attack_weights=(
    [sql_inj]=5
    [xss]=5
    [ssh_force]=5
    [port_scan]=5
    [dos]=5
    [tcp_syn_flood]=5
)

declare -A normal_traffic=(
    [ping]="Normal/ping_test.sh"
    [http_requests]="Normal/http_requests.sh"
    [ssh_activity]="Normal/ssh_login.sh"
)

random_poisson() {
    lambda=0.005  
    awk -v lambda="$lambda" 'BEGIN {
        srand();
        L = exp(-lambda);
        k = 0;
        p = 1;
        while (p > L) {
            k++;
            p *= rand();
        }
        print int(k * 30);  # Skalowanie do przedzia≈Çu 30-300s
    }'
}

random_normal() {
    mean=15
    stddev=5
    awk -v mean="$mean" -v stddev="$stddev" 'BEGIN {
        srand();
        r1 = rand(); r2 = rand();
        print int(mean + stddev * sqrt(-2 * log(r1)) * cos(2 * 3.141592 * r2));
    }'
}

select_attack() {
    local total_weight=0
    for weight in "${attack_weights[@]}"; do
        ((total_weight += weight))
    done

    local r=$(( RANDOM % total_weight ))
    local cumulative=0

    for attack in "${!attack_weights[@]}"; do
        ((cumulative += attack_weights[$attack]))
        if (( r < cumulative )); then
            echo "$attack"
            return
        fi
    done
}

select_normal_traffic() {
    local keys=("${!normal_traffic[@]}")
    echo "${keys[RANDOM % ${#keys[@]}]}"
}

select_traffic_type() {
    local r=$(( RANDOM % 100 ))

    if (( r < 15 )); then
        echo "attack"
    elif (( r < 65 )); then
        echo "normal"
    else
        echo "idle"
    fi
}


total_time=3600
SECONDS=0

while (( SECONDS < total_time )); do
    inter_action_time=$(random_poisson)
    if (( inter_action_time < 30 )); then inter_action_time=30; fi
    sleep "$inter_action_time"

    traffic_type=$(select_traffic_type)

    if [[ "$traffic_type" == "attack" ]]; then
        selected_attack=$(select_attack)
        echo "[$SECONDS] Selected atack: $selected_attack (${attacks[$selected_attack]})"
        bash "${attacks[$selected_attack]}"

        attack_duration=$(random_normal)
        if (( attack_duration < 5 )); then attack_duration=5; fi
        sleep "$attack_duration"

    elif [[ "$traffic_type" == "normal" ]]; then
        selected_traffic=$(select_normal_traffic)
        echo "[$SECONDS] Ordinary network traffic: $selected_traffic (${normal_traffic[$selected_traffic]})"
        bash "${normal_traffic[$selected_traffic]}"

        traffic_duration=$(random_normal)
        if (( traffic_duration < 10 )); then traffic_duration=10; fi
        sleep "$traffic_duration"

    else
        echo "[$SECONDS] No specific network traffic."
    fi
done
